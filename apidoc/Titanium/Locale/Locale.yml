---
name: Titanium.Locale
summary: The top level Locale module.  
description: |
    The `Locale` module works with localization files to which are generated during compilation 
    into the operating system specific localization formats. The `Locale` module provides 
    locale-specific strings which can be referenced at runtime.  Additionally, the module 
    contains a few methods and properties for querying device locale information.
    
    The macro `L` can be used as an alias for the <Titanium.Locale.getString> method.
extends: Titanium.Module
since: "1.5"
platforms: [android, iphone, ipad, mobileweb]

methods:
  - name: formatTelephoneNumber
    summary: Formats a telephone number according to the current system locale.
    platforms: [android]
    returns:
        type: String
    parameters:
      - name: number
        summary: Phone number.
        type: String
        
  - name: getCurrencyCode
    summary: Returns the ISO 3-letter currency code for the specified locale.
    description: |
        This method returns one of the ISO 4217 currency codes. For example, 
        `getCurrencyCode('en-US')` returns `USD`. See the `xe.com` website 
        [Currency List](http://www.xe.com/iso4217.php#section2) section of the `www.xe.com` website for 
        reference.
    platforms: [android, iphone, ipad]
    returns:
        type: String
    parameters:
      - name: locale
        summary: |
            Locale, as a combination of ISO 2-letter language and country codes. For example, 
            `en-US` or `en-GB`. See the 
            [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) and 
            [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) 
            sections of wikipedia for reference.
        type: String
        
  - name: getCurrencySymbol
    summary: Returns the currency symbol for the specified currency code.
    description: |
        This method returns one of the international currency symbols. For example, 
        `getCurrencySymbol('USD')` returns `$`. See the 
        [Currency Symbols](http://www.xe.com/symbols.php#section2) section of the 
        `www.xe.com` website for reference.
    platforms: [android, iphone, ipad]
    returns:
        type: String
    parameters:
      - name: currencyCode
        summary: |
            Currency, as an ISO 3-letter code. For example, `USD` or `GBP`. See the 
            [Currency List](http://www.xe.com/iso4217.php#section2) section of the `www.xe.com` website for 
            reference.
        type: String
        
  - name: getLocaleCurrencySymbol
    summary: Returns the currency symbol for the specified locale.
    description: |
        This method returns one of the international currency symbols. For example, 
        `getLocaleCurrencySymbol('en-US')` returns `$`. See the 
        [Currency Symbols](http://www.xe.com/symbols.php#section2) section of the 
        `www.xe.com` website for reference.
    platforms: [android, iphone, ipad]
    returns:
        type: String
    parameters:
      - name: locale
        summary: |
            Locale, as a combination of ISO 2-letter language and country codes. For example, 
            `en-US` or `en-GB`. See the 
            [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) and 
            [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) 
            sections of wikipedia for reference.
        type: String
        
  - name: getString
    summary: |
        Returns a string, localized according to the current system locale using the appropriate 
        `/i18n/LANG/strings.xml` localization file.
    returns:
        type: String
    parameters:
      - name: key
        summary: Key of string.
        type: String
        
      - name: hint
        summary: Text to return if key does not exist in the localization file.
        type: String
        optional: true
    examples:
      - title: String Localization Demonstration
        example: |
            Localize two strings, "hello" and "goodbye" (using the keys "hello" and "goodbye") for 
            English and Spanish system locales.  
            
            Note: use the device's system settings to change locales and test this code.
            
            #### `/i18n/en/strings.xml`
            
                <?xml version="1.0" encoding="UTF-8"?>
                <resources>
                  <string name="hello">hello</string>
                  <string name="goodbye">goodbye</string>
                </resources>
            
            #### `/i18n/es/strings.xml`
            
                <?xml version="1.0" encoding="UTF-8"?>
                <resources>
                  <string name="hello">hola</string>
                  <string name="goodbye">adios</string>
                </resources>
            
            #### `/Resources/app.js`
                
                var i18nError = '<no translation available for the current system locale>';
                
                // for English locales, displays "***** You say goodbye and I say hello! *****"
                // for Spanish locales, displays "***** You say adios and I say hola! *****"
                Ti.API.info('***** You say ' + Ti.Locale.getString('goodbye', i18nError) + ' and I say ' + Ti.Locale.getString('hello', i18nError) + '! *****');
                
                // displays phrase substituted with "<no translation available for the current system locale>" hint text
                Ti.API.info('***** You say ' + Ti.Locale.getString('something', i18nError) + ' and I say ' + Ti.Locale.getString('somethingelse', i18nError) + '! *****');

properties:
  - name: currentCountry
    summary: Country of the current system locale, as an ISO 2-letter code.
    description: |
        This property holds a value such as `US` or `GB`. See the 
        [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) 
        country codes section of wikipedia for reference.
    platforms: [android, mobileweb]
    type: String
    permission: read-only
    
  - name: currentLanguage
    summary: Language of the current system locale, as an ISO 2-letter code.
    description: |
        This property holds a value such as `en` or `fr`. See the 
        [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) section of wikipedia for reference.
    type: String
    permission: read-only
    
  - name: currentLocale
    summary: Current system locale, as a combination of ISO 2-letter language and country codes.
    description: |
        This property holds a value such as `en-US` or `en-GB`.
        See the [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) and 
        [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) 
        sections of wikipedia for reference.
    type: String
    permission: read-only
