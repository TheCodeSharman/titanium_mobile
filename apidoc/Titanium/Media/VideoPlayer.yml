---
name: Titanium.Media.VideoPlayer
summary: A native control for playing videos.
description: | 
    The video player is a native view that can be used to play videos, either stored
    locally or streamed from a web server. The player can occupy the full screen, or can
    be used as a view that can be added to other views.

    Use the <Titanium.Media.createVideoPlayer> method to create a video player.

    #### Platform Implementation Notes

    All platforms support specifying the video content as a URL, either to a local file or
    a remote stream. This is done by setting the [url](Titanium.Media.VideoPlayer.url) property.

    On iOS, video content can also be specified as a [Blob](Titanium.Blob) or
    [File](Titanium.Filesystem.File) object using the
    [media](Titanium.Media.VideoPlayer.media) property.

    On iOS, a video player can dynamically switch back and forth between fullscreen mode
    and standard mode. If the native video controls are displayed, the user can use them
    to switch between standard and fullscreen mode. 

    On Android, the video player cannot switch modes. To create a fullscreen player, you
    must specify `fullscreen: true` when you create the player.

    There are several known issues with clipping on the Android video player. 

    * When used with `scalingMode` set to VIDEO_SCALING_ASPECT_FILL or VIDEO_SCALING_NONE,
      the video content is not correctly clipped to the boundaries of the view.  
      ([TIMOB-7628](https://jira.appcelerator.org/browse/TIMOB-7628))

    * When a border is set on the view, the video content does not take the border width
      into account, so the video content covers the border.
      ([TIMOB-7628](https://jira.appcelerator.org/browse/TIMOB-7628))

    * If a borderRadius is specified, the video content is not clipped to the rounded
      corners. ([TIMOB-7629](https://jira.appcelerator.org/browse/TIMOB-7629))
      

extends: Titanium.UI.View
since: "0.9"

methods:

  - name: cancelAllThumbnailImageRequests
    summary: Cancels all pending asynchronous thumbnail requests.
    description: |
        Asynchronous thumbnail requests initiated with 
        [requestThumbnailImagesAtTimes](Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes).
    platforms: [iphone, ipad]

  - name: pause
    summary: Pauses playing the video.

  - name: play
    summary: Starts playing the video

  - name: release
    summary: Releases the internal video resources immediately.  
    description: |
        This is not usually necessary but can help if you no longer need to use the player after 
        it is used to help converse memory.

  - name: requestThumbnailImagesAtTimes
    summary: Asynchronously request thumbnail images for one or more points in time in the video.
    description: |
        The `times` parameter specifies an array of time values, in
        **seconds**. For each time value, the platform generates an image 
        representing the video at that point in time.
        
        The callback function is invoked when a thumbnail is available.

        Currently, only the first requested thumbnail is returned. This is a known issue
        [(TIMOB-7623)](https://jira.appcelerator.org/browse/TIMOB-7623).
    platforms: [iphone, ipad]
    parameters:
      - name: times
        summary: Array of time values, representing offsets into the video, in milliseconds.
        type: Array<Number>
      - name: option
        summary: |
            Either <Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME> or 
            <Titanium.Media.VIDEO_TIME_OPTION_EXACT>.
        type: Number
      - name: callback
        summary: Callback to invoke when a thumbnail is available.
        type: Callback<ThumbnailResponse>

  - name: setBackgroundView
    summary: Sets the background view for customization which is always displayed behind movie content.
    description: |
        To create a background behind the movie content on iOS, you can specify a 
        background view. On iOS, you can set the `backgroundColor` property directly on
        the video player, but not a background image or background gradient. For this kind
        of effect, specify a background view. 
        
        Note that the background view must be sized explicitly: percentage sizes do not work properly.

        The following code sample creates a video player with a background image:

            var videoPlayer = Titanium.Media.createVideoPlayer({
                height : 300,
                width : 300,
                backgroundView : Ti.UI.createView({
                    backgroundImage: 'videoPlayerBG.png
                    width : 300,
                    height : 300
                })
                borderRadius : 20,
                borderWidth : 2,
                borderColor : 'blue',
            });

        Note that if [scalingMode](Titanium.Media.VideoPlayer.scalingMode) is set to 
        [VIDEO_SCALING_MODE_FILL](Titanium.Media.VIDEO_SCALING_MODE_FILL) or 
        [VIDEO_SCALING_MODE_ASPECT_FILL](Titanium.Media.VIDEO_SCALING_MODE_ASPECT_FILL),
        the playing video will fill the entire video player area, obscuring any background
        view.
    platforms: [iphone, ipad]
    parameters:
      - name: view
        summary: View to set.
        type: Titanium.UI.View

  - name: setMedia
    summary: Specifies the media to play, as either a `File` or `Blob` object..
    platforms: [iphone, ipad]
    parameters:
      - name: media
        summary: Media to play
        type: [Titanium.Blob, Titanium.Filesystem.File]

  - name: stop
    summary: Stops playing the video

  - name: thumbnailImageAtTime
    summary: Returns a thumbnail image for the video at the specified time.
    platforms: [iphone, ipad]
    returns:
        type: Titanium.Blob
    parameters:
      - name: time
        summary: Playback time, in **seconds**.
        type: Number
      - name: option
        summary: Either <Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME> or <Titanium.Media.VIDEO_TIME_OPTION_EXACT>
        type: Number

events:

  - name: complete
    summary: Fired when movie playback ends or a user exits playback.
    properties:
      - name: reason
        summary: |
            Reason that playback ended, one of:
            [VIDEO_FINISH_REASON_PLAYBACK_ENDED](Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED),
            [VIDEO_FINISH_REASON_PLAYBACK_ERROR](Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR), or 
            [VIDEO_FINISH_REASON_USER_EXITED](Titanium.Media.VIDEO_FINISH_REASON_USER_EXITED).
        type: Number

  - name: durationAvailable
    summary: Fired when the video duration is available
    properties:
      - name: duration
        summary: Video duration, in milliseconds.
        type: Number

  - name: error
    summary: Fired when movie playback encounters an error.
    properties:
      - name: message
        summary: Reason for error as a string.
        type: String

  - name: fullscreen
    summary: Fired when a movie changes to or from fullscreen view.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: entering
        summary: |
            `true` if the player is entering fullscreen mode, `false` if it is leaving
            fullscreen mode.
        type: Boolean

  - name: load
    summary: Fired when the movie play loads.

  - name: loadstate
    summary: |
        Fired when the network [loadState](Titanium.Media.VideoPlayer.loadState) changes.
    properties:
      - name: loadState
        summary: Current value of the [loadState](Titanium.Media.VideoPlayer.loadState) property.
        type: Number

  - name: mediaTypesAvailable
    summary: Fired when the media types in the current movie are determined.
    platforms: [iphone, ipad]
    properties:
      - name: mediaTypes
        summary: Current value of the [mediaTypes](Titanium.Media.VideoPlayer.mediaTypes) property.
        type: Number

  - name: naturalSizeAvailable
    summary: Fired when the natural size of the current movie is determined.
    platforms: [iphone, ipad]
    properties:
      - name: naturalSize
        summary: Current value of the [naturalSize](Titanium.Media.VideoPlayer.naturalSize) property.
        type: Number

  - name: playbackState
    summary: Fired when the [playbackState](Titanium.Media.VideoPlayer.playbackState) changes.
    properties:
      - name: playbackState
        summary: |
            Current value of the [playbackState](Titanium.Media.VideoPlayer.playbackState) property, 
            such as <Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING>.
        type: Number

  - name: playing
    summary: Fired when the currently playing movie changes.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: url
        summary: URL of the media.
        type: String

  - name: preload
    summary: Fired when the movie has preloaded and is ready to play.

  - name: resize
    summary: Fired when the movie player is resized.
    platforms: [iphone, ipad]

  - name: sourceChange
    summary: Fired when the movieSourceType is <Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN> when preparing for playback.
    platforms: [iphone, ipad]
    properties:
      - name: sourceChange
        summary: the new sourceType

properties:

  - name: allowsAirPlay
    summary: Whether or not the current movie can be played on a remote device.
    type: Boolean
    platforms: [iphone, ipad]
    osver:
        ios:
            min: "4.3"

  - name: autoplay
    summary: Indicates if a movie should automatically start playback.
    description: |
        On iOS, playback starts automatically if `autoplay` is `true` *and* the movie is likely to 
        finish uninterrupted. The OS determines whether the movie is likely to finish
        uninterrupted based on factors including the bit rate of the movie and network
        conditions (if the movie is being streamed from a remote source).
    type: Boolean
    default: true

  - name: contentURL
    summary: Use the [url](Titanium.Media.VideoPlayer.url) property instead.
    type: String
    deprecated:
        since: "1.4.0"

  - name: currentPlaybackTime
    summary: Current playback time of the current movie in milliseconds.
    type: Number
    permission: read-only

  - name: duration
    summary: The duration of the current movie in milliseconds, or 0.0 if not known.
    description: |
        The duration of the movie may not be available when playback is started. The
        [durationAvailable](Titanium.Media.VideoPlayer.durationAvailable) event is 
        fired when the duration is known.
    type: Number

  - name: endPlaybackTime
    summary: The end time of movie playback, in milliseconds.
    description: |
        On iOS, defaults to NaN, which indicates natural end time of the movie.
        Changing the value to a value less than `duration` causes the movie to 
        stop playing at the specified point.
        
        On Android, this is always the same as `duration` (the natural end time),
        and changing the value has no effect.
    type: Number

  - name: fullscreen
    summary: |
        Determines if the movie is presented in the entire screen (obscuring all other application content). 
    description: |
        Note that this must be set at different times on different platforms:

        On iOS, setting this property to `true` before the movie player's view is visible
        has no effect. 
        
        On Android, this property must be set at creation time. For example:

            var player = Ti.Media.createVideoPlayer({fullscreen: true});

        On Android, setting this value to `true` means that the video will have its own Android Activity 
        rather than being embedded as a view. 
    type: Boolean
    default: false

  - name: initialPlaybackTime
    summary: The start time of movie playback, in milliseconds.
    description: |
        Defaults to NaN in iOS and 0 in Android, indicating the natural start time of the movie.
    type: Number

  - name: loadState
    summary: Returns the network load state of the movie player.
    type: Number
    permission: read-only

  - name: media
    summary: Media object to play, either as a `File` or as a `Blob`.
    platforms: [iphone, ipad]
    type: [Titanium.Blob, Titanium.Filesystem.File]

  - name: mediaControlStyle
    summary: The style of the playback controls.
    description: |
        Specify one of the `VIDEO_CONTROL` constants from <Titanium.Media>.

        Mobile web only supports <Titanium.Media.VIDEO_CONTROL_NONE> and 
        <Titanium.Media.VIDEO_CONTROL_DEFAULT>.
    type: Number
    default: System default video controls (<Titanium.Media.VIDEO_CONTROL_DEFAULT>).

  - name: mediaTypes
    summary: The types of media in the movie, or <Titanium.Media.VIDEO_MEDIA_TYPE_NONE> if not known.
    description: |
        A movie can contain video
        ([VIDEO_MEDIA_TYPE_VIDEO](Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO)), 
        audio, ([VIDEO_MEDIA_TYPE_AUDIO](Titanium.Media.VIDEO_MEDIA_TYPE_AUDIO)), or both.

        A movie with both audio and video media is represented by a bitwise OR of the two
        constants:

            Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO|Titanium.Media.VIDEO_MEDIA_TYPE_AUDIO
    platforms: [iphone, ipad]
    type: Number

  - name: movieControlMode
    summary: Use `mediaControlStyle` instead.
    description: |
        Provides the ability to set the control mode of the movie player. 
    platforms: [iphone, ipad]
    type: Number
    default: <Titanium.Media.VIDEO_CONTROL_DEFAULT>
    osver:
        ios:
            max: "3.1"
    deprecated: {since: "1.8.0", removed: "1.9.0"}

  - name: naturalSize
    summary: Returns the natural size of the movie.
    description: |
        Returns a dictionary with properties `width` and `height`. Returns 0 for both properties if not 
        known or applicable. 

        The [naturalSizeAvailable](Titanium.Media.VideoPlayer.naturalSizeAvailable) event is
        fired when the natural size is known.
    platforms: [iphone, ipad]
    type: MovieSize

  - name: playableDuration
    summary: The currently playable duration of the movie, for progressively downloaded network content. 
    description: |
        On Android, this is always the same as `duration`.
    type: Number
    permission: read-only

  - name: playbackState
    summary: Returns the current playback state of the video player
    type: Number
    permission: read-only

  - name: playing
    summary: Boolean to indicate if the player has started playing.
    type: Boolean
    permission: read-only

  - name: repeatMode
    summary: Determines how the movie player repeats when reaching the end of playback. 
    description: |
        Specify [VIDEO_REPEAT_MODE_NONE](Titanium.Media.VIDEO_REPEAT_MODE_NONE) to disable
        repeat, or [VIDEO_REPEAT_MODE_ONE](Titanium.Media.VIDEO_REPEAT_MODE_ONE) to repeat
        a single video continuously.
    platforms: [iphone, ipad, mobileweb]
    type: Number
    default: Titanium.Media.VIDEO_REPEAT_MODE_NONE

  - name: scalingMode
    summary: Determines how the content scales to fit the view.
    description: |
        Mobile web only supports 
        <Titanium.Media.VIDEO_SCALING_NONE> and <Titanium.Media.VIDEO_SCALING_ASPECT_FIT>.
    type: Number
    default: <Titanium.Media.VIDEO_SCALING_ASPECT_FIT>

  - name: sourceType
    summary: The playback type of the movie. 
    description: |
        One of: [VIDEO_SOURCE_TYPE_FILE](Titanium.Media.VIDEO_SOURCE_TYPE_FILE), 
        [VIDEO_SOURCE_TYPE_STREAMING](Titanium.Media.VIDEO_SOURCE_TYPE_STREAMING), or
        [VIDEO_SOURCE_TYPE_UNKNOWN](Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN).

        Specifying a playback type before playing the movie can result in faster load times.

        The [sourceChange](Titanium.Media.VideoPlayer.sourceChange) event is fired when
        movie's source type is determined.
    platforms: [iphone, ipad]
    type: Number
    default: Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN

  - name: url
    summary: URL of the media to play.
    description: |
        URL identifying a local or remote video to play.
    type: String

  - name: useApplicationAudioSession
    summary: |
        Indicates if the movie player should inherit the application's audio session
        instead of creating a new session. 
    description: |
        Creating a new session interrupts the application's session.

        Setting this property during playback will not take effect until playback is stopped 
        and started again.
    platforms: [iphone, ipad]
    type: Boolean
    default: true

---
name: ThumbnailResponse
summary: |
    Simple object passed to the thumbnail callback in response to the
    [requestThumbnailImagesAtTimes](Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes)
    method.
description: |
    The callback is invoked when a movie thumbnail is available.
  - name: thumbnail
    summary: fired when a movie thumbnail is available from `requestThumbnailImagesAtTimes`
platforms: [iphone, ipad]
    properties:
      - name: success
        summary: boolean to indicate success or failure
      - name: image
        summary: blob of the thumbnail image
      - name: time
        summary: time
      - name: error
        summary: if success is `false`, error message as string for reason

---
name: MovieSize
summary: Simple object used to describe the size of a movie.
platforms: [iphone, ipad]
properties:
  - name: width
    summary: Width of the movie.
    type: Number
  - name: height
    summary: Height of the movie.
    type: Number
