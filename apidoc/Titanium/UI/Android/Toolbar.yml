---
name: Titanium.UI.Android.Toolbar
summary: An Android toolbar, which can contain buttons and other custom views.
description: |
    A `Toolbar` is created by the <Titanium.UI.Android.createToolbar> factory method.
    
    A `Toolbar` can contain buttons, as well as certain other widgets, including text fields and labels. 
    
    A toolbar can be positioned everywhere in the the layout as a [View](Titanium.UI.View). It can also be used as an ActionBar 
    for [activities](Titanium.Android.Activity). This allows a toolbar to inherit [ActionBar's](Titanium.Android.ActionBar) methods,
    properties and events and provide a better customization of this design element. For example you can provide your own images
    to be used as navigation button icon, nverflow menu icon and logo. In order to do that an application must be using Theme.AppCompat.NoTitleBar.
    It can be set in the tiapp.xml file of the application.

extends: Titanium.UI.View
excludes: { properties: [ backgroundColor, backgroundDisabledColor, backgroundDisabledImage,         
            backgroundFocusedColor, backgroundFocusedImage,
            backgroundLeftCap, backgroundTopCap, backgroundRepeat,
            backgroundSelectedColor, backgroundSelectedImage, layout,
            softKeyboardOnFocus ],
            events: [ longclick, twofingertap ] }
since: "6.2.0"
platforms: [android]

properties:
  - name: barColor
    summary: Background color for the toolbar, as a color name or hex triplet.
    description: |
        To use a background image on the toolbar, either `barColor` must be a fully or
        partially transparent color, 
        or the [translucent](Titanium.UI.Android.Toolbar.translucent) property must be `true`.

        For information about color values, see the "Colors" section of <Titanium.UI>. 
    type: String
    
  - name: items
    summary: An array of buttons (or other widgets) contained in the toolbar.
    type: Array<Titanium.UI.View>
    
  - name: extendBackground
    summary: If `true`, the background of the toolbar extends upwards by the height of StatusBar for current device.
    description: |
        This property is Numberended to be used when the toolbar is used as an ActionBar. It allows the user to specify
        that the toolbar's background show through the status bar on Android Lollipop and above. The toolbar must be
        placed at the top of the screen just below the status bar for this property to work as expected. This **must**
        be specified at creation.
    type: Boolean
    default: Undefined. Behaves as if set to false.
    osver: {android: {min: "21"}}
    availability: creation
    
  - name: translucent
    summary: If `true`, a translucent background color is used for the toolbar.
    type: Boolean

methods:
  - name: collapseActionViews
    summary: Collapses expanded ActionViews if there is any

  - name: dismissPopupMenus
    summary: Collapses expandend ActionViews and hides overflow menu

  - name: getContentInsetEnd
    summary: Returns the margin at the toolbar's content end.
    returns:
        type: Number

  - name: getContentInsetEndWithActions
    summary: Returns the margin after the toolbar's content when there are action buttons.
    retruns:
        type: Number

  - name: getContentInsetLeft
    summary: Returns the margin on the left of the toolbar's content.
    returns:
        type: Number

  - name: getContentInsetRight
    summary: Returns the margin on the right of the toolbar's content.
    returns:
        type: Number

  - name: getContentInsetStart
    summary: Returns the margin at the toolbar's content start. 
    returns:
        type: Number

  - name: getContentInsetStartWithNavigation
    summary: Returns the margin at the toolbar's content start when there is a navigation button.
    returns:
        type: Number

  - name: getCurrentContentInsetEnd
    summary: Returns the margin at the toolbar's content end that will be used with the current configuration of the toolbar.
    returns:
        type: Number

  - name: getCurrentContentInsetLeft
    summary: Returns the margin on the left of the toolbar's content that will be used with the current configuration of the toolbar.
    returns:
        type: Number

  - name: getCurrentContentInsetRight
    summary: Returns the margin on the right of the toolbar's content that will be used with the current configuration of the toolbar.
    returns:
        type: Number

  - name: getCurrentContentInsetStart
    summary: Returns the margin at the toolbar's content start that will be used with the current configuration of the toolbar. 
    returns:
        type: Number

  - name: getLogo
    summary: Returns the source of the logo image in the format it was set.

  - name: getNavigationIcon
    summary: Returns the source of the navigation image in the format it was set.

  - name: getOverflowIcon
    summary: Returns the source of the overflow menu image in the format it was set.

  - name: getSubtitle
    summary: Returns the subtitle of the toolbar    
    returns:
        type: String

  - name: getTitle
    summary: Returns the title of the toolbar    
    returns:
        type: String

  - name: hasExpandedActionView
    summary: Checks if the toolbar is currently hosting an expanded action view.        
    returns:
        type: Boolean

  - name: hideOverflowMenu
    summary: Hides the overflow menu if there is one.

  - name: isOverflowMenuShowing
    summary: Checks if the toolbar is currently hosting an expanded action view.
    returns:
        type: Boolean

  - name: setLogo
    parameters: 
      - name: logo
        summary: Source of the logo image
        type: [String, Titanium.Blob, Titanium.Filesystem.File]

  - name: setNavigationIcon
    parameters: 
      - name: icon
        summary: Source of the navigation icon image
        type: [String, Titanium.Blob, Titanium.Filesystem.File]

  - name: setOverflowIcon
    parameters: 
      - name: icon
        summary: Source of the overflow menu icon image
        type: [String, Titanium.Blob, Titanium.Filesystem.File]
  
  - name: setSubtitle
    parameters:
      - name: subtitle
        type: String

  - name: setSubtitleTextColor
    parameters:
      - name: color
        summary: Color string with any Titanium supported format
        type: String

  - name: setTitle
    parameters:
      - name: title
        type: String

  - name: setTitleTextColor
    parameters:
      - name: color
        summary: Color string with any Titanium supported format
        type: String

  - name: setContentInsetEndWithActions
    parameters:
      - name: inset
        summary: Sets the margin at the content's end when there are action views.
        type: Number    

  - name: setContentInsetStartWithNavigation
    parameters:
      - name: inset
        summary: Sets the margin at the content's start where there is a navigation button.
        type: Number

  - name: setContentInsetsAbsolute
    summary: Sets the content margins of the toolbar
    parameters:
      - name: insetLeft
        type: Number
      - name: insetRight
        type: Number

  - name: setContentInsetsRelative
    summary: Sets the content margins relative to the layout direction
    parameters:
      - name: insetStart
        type: Number
      - name: insetEnd
        type: Number

  - name: showOverflowMenu
    summary: Shows the overflow menu if there is one    

examples: 
  - title: Simple Toolbar
    example: |
        The following code excerpt creates a simple toolbar, placed at the bottom of the window. 
        
            var send = Titanium.UI.createButton({
                title: 'Send'
            });
            
            var save = Titanium.UI.createButton({
                title: 'Save'
            });
            
            var discard = Titanium.UI.createButton({
                title: 'Discard'
            });
            
            var toolbar = Titanium.UI.Android.createToolbar({
                items:[send, save, discard],
                bottom:0,
            }); 
            win.add(toolbar);


  - title: Toolbar with extended background
    example: |
        The following code excerpt creates a simple toolbar, placed at the top of the window which extends its background under the status bar. 
        
            var window = Ti.UI.createWindow();

            var toolbar = Ti.UI.Android.createToolbar({
                backgroundColor: 'red'
                width: Ti.UI.FILL,
                extendBackground: true,
                top: 0
            });

            window.activity.supportToolbar = toolbar;
            window.open();

