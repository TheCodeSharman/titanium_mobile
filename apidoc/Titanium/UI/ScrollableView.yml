---
name: Titanium.UI.ScrollableView
summary: |
    A view that encapsulates a horizontally-scrolling set of child views, navigable using its built-in 
    horizontal swipe gestures.
description: |
    Use the <Titanium.UI.createScrollableView> method to create a scrollable view.
    
    ScrollableView supports an on-screen visual paging control that appears on the left and right 
    of the view to indicate whether a previous or next child view exists. 
    
    Only the `scroll` event exists on Android. To support those that are missing, event listeners 
    may be added to its child views.
    
    In a previous Titanium version for iOS, the `maxZoomScale` and `minZoomScale` properties were 
    removed for performance and parity reasons. As they still remain in <Titanium.UI.ScrollView>, 
    the equivalent functionality may be obtained by adding a ScrollView to ScrollableView. See the 
    "Simple Scrollable View with 2 Zoomable Images" example for a demonstration.
excludes: { 
    events: [ 'click', 'longclick', 'pinch', 'scrollEnd', 'swipe', 'touchend', 'touchmove' ]
}
extends: Titanium.UI.View
platforms: [android, iphone, ipad, mobileweb]
since: "0.8"

methods:
  - name: addView
    summary: Adds a new child view to this Scrollable View.
    parameters:
      - name: view
        summary: The view to add.
        type: Object

  - name: moveNext
    summary: |
        Sets the current child view to the next consecutive view in <Titanium.UI.ScrollableView.views>.
    platforms: [android]
    
  - name: movePrevious
    summary: |
        Sets the current child view to the previous consecutive view in <Titanium.UI.ScrollableView.views>.
    platforms: [android]
    
  - name: removeView
    summary: Removes an existing child view from this Scrollable View.
    description: |
        On Android, does nothing if the view does not exist in <Titanium.UI.ScrollableView.views>. 
        
        On iOS, throws an exception if the view does not exist in <Titanium.UI.ScrollableView.views> 
        or the index is invalid.
    parameters:
      - name: view
        summary: |
            A <Titanium.UI.View> object (all platforms) or integer index (iPhone, iPad only) of 
            a view to remove.
        type: [Number, Titanium.UI.View]
    
  - name: scrollToView
    summary: Scrolls to the specified child view in <Titanium.UI.ScrollableView.views>.
    parameters:
      - name: view
        summary: An integer index or a <Titanium.UI.View> object to set as the current child view.
        type: [Number, Titanium.UI.View]

events:
  - name: dblclick
    summary: Fired when the device detects a double click against the view.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number

  - name: doubletap
    summary: Fired when the device detects a double tap against this view.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
    
  - name: longpress
    summary: Fired when the device detects a long press against this view.
    description: |
        Generated by touching and holding on a touchscreen, this event occurs before the 
        finger is lifted again. Note that `longpress` cannot be generated with a trackball.
    platforms: [iphone, ipad]
    properties:
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
    
  - name: scroll
    summary: Fired when the current child view is changed.
    properties:
      - name: currentPage
        summary: Index of the current view of <Titanium.UI.ScrollableView.views>.
        type: Number
        
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: view
        summary: The current view.
        type: Object
    
  - name: singletap
    summary: Fired when the device detects a single tap against this view.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
      
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
  
  - name: touchcancel
    summary: Fired when a touch gesture is interrupted by the device.
    description: |
        Generated in various circumstances, including an incoming call to allow the UI to clean 
        up state.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number
        
  - name: touchstart
    summary: Fired as soon as the device detects a touch gesture against this view.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number

  - name: twofingertap
    summary: Fired when the device detects a two-finger tap against the view.
    platforms: [iphone, ipad]
    properties:
      - name: globalPoint
        summary: |
            Coordinates `x` and `y` describing the location of the event in terms of screen 
            coordinates.
        type: Dictionary
        deprecated:
            since: "1.8.0"
        platforms: [iphone, ipad]
        
      - name: y
        summary: Y coordinate of the event from the `source` view's coordinate system.
        type: Number

      - name: x
        summary: X coordinate of the event from the `source` view's coordinate system.
        type: Number

properties:
  - name: cacheSize
    summary: Number of child views to cache (pre-render).
    description: |
        Views are rendered in the range (currentPage +/- (cacheSize - 1)/2), *rounded down* for even 
        values (i.e. cacheSize=4 renders 3 views into the cache.) Keep in mind that improved 
        performance (larger cache) will lead to faster performance, but greater memory usage.
    type: Number
    platforms: [iphone,ipad]
    
  - name: currentPage
    summary: Index of the active child view.
    type: Number
    
  - name: disableBounce
    summary: Determines whether view bouncing effect is disabled.
    type: Boolean
    default: false
    platforms: [iphone, ipad]

    
  - name: pagingControlColor
    summary: Color of the paging control, as a color name or hex triplet.
    description: |
        For information about color values, see the "Colors" section of <Titanium.UI>. 
    type: String
    default: black
    platforms: [iphone,ipad]
    
  - name: pagingControlHeight
    summary: Height of the paging control, in pixels.
    type: Number
    default: 20
    platforms: [iphone,ipad]
    
  - name: showPagingControl
    summary: Determines whether the paging control is visible.
    description: Set to `true` to show paging control.
    type: Boolean
    default: false
    
  - name: pagingControlTimeout
    summary: Number of milliseconds to wait before hiding the paging control.
    description: Set to less than or equal to `0` to disable timeout, to keep controls displayed.
    type: Number
    availability: creation
    default: 3000
    platforms: [android, mobileweb]
    
  - name: pagingControlAlpha
    summary: Alpha value of the paging control.
    type: Number
    default: 1.0
    platforms: [iphone,ipad]
    since: "2.1.0"
    
  - name: pagingControlOnTop
    summary: Determines whether the paging control is displayed at the top or bottom of the view.
    description: Set to `true` for the paging control at the top.
    type: Boolean
    default: false
    platforms: [iphone,ipad]
    since: "2.1.0"
    
  - name: overlayEnabled
    summary: Determines whether the paging control is added as an overlay to the scrollable view.
    description: |
        If this property is set to `true`, the scrollable view takes up the entire height 
        available in the current view and the paging control is placed over the scrollable view. 
        It is advisable to set appropriate value for 
        [pagingControlAlpha](Titanium.UI.ScrollableView.pagingControlAlpha) along with this 
        property, so that the underlying scrollable view content can be seen properly.
    type: Boolean
    default: false
    platforms: [iphone,ipad]
    since: "2.1.0"
    
  - name: scrollingEnabled
    summary: Determines whether scrolling is enabled on the Scrollable view.
    description: If this property is unset or `true`, scrolling is enabled.
    type: Boolean
    default: undefined (scrolling enabled)
    platforms: [iphone, ipad, android]
    since: { android: "2.1", iphone: "2.0", ipad: "2.0" }

  - name: views
    summary: Sets the child views within this Scrollable View.
    type: Array<Titanium.UI.View>

  - name: clipViews
    summary: |
        Determines whether the previous and next child views are clipped, so that they are not 
        visible, adjacent to the current view.
    description: |
        Set to `false` to allow the previous or next child views to be seen. Note that 
        ScrollableView's [width](Titanium.UI.ScrollableView.width) must be smaller than its parent 
        view in order to make this property effective.
    type: Boolean
    availability: creation
    default: true
    platforms: [iphone, ipad]

  - name: hitRect
    summary: |
        Sets a rect to perform hit testing on, to determine if touches have occurred on this
        view.
    description: |
        By setting this to some rect, one can override the normal hit testing.  Note that the
        `x` and `y` specified are relative to the position of the view.
    type: Dimension
    default: undefined (hit against size of view)
    platforms: [iphone, ipad]
    since: "2.1"

examples:
  - title: Simple Scrollable View with 3 Views
    example: |
        Create three views and place each into a scrollable view.
        
            var win = Ti.UI.createWindow();
            
            var view1 = Ti.UI.createView({ backgroundColor:'#123' });
            var view2 = Ti.UI.createView({ backgroundColor:'#246' });
            var view3 = Ti.UI.createView({ backgroundColor:'#48b' });
            
            var scrollableView = Ti.UI.createScrollableView({
              views:[view1,view2,view3],
              showPagingControl:true
            });
            
            win.add(scrollableView);
            win.open();
            
  - title: Simple Scrollable View with 2 Zoomable Images
    example: |
        Create two scroll views, each containing an image view, and place them in a scrollable view.
        
            var img1 = Ti.UI.createImageView({
                image:'http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/' +
                'Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/' +
                '402px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg'
            });
            var img1Wrapper = Ti.UI.createScrollView({
                maxZoomScale:4.0,
            });
            img1Wrapper.add(img1);
            
            var img2 = Ti.UI.createImageView({
                image:'http://www.nasa.gov/images/content/' + 
                '616903main_rover_comparison1600_1600-1200.jpg'
            });
            var img2Wrapper = Ti.UI.createScrollView({
                maxZoomScale:4.0,
            });
            img2Wrapper.add(img2);
            var photosView = Ti.UI.createScrollableView({
                showPagingControl:true,
                views:[img1Wrapper,img2Wrapper]
            });
            win.add(photosView);
