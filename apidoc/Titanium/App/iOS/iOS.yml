---
name: Titanium.App.iOS
summary: |
    The top-level App iOS module, available only to iOS devices, that includes the facilities to 
    create and manage local notifications and background services.
description: |
    Local notifications are a way for an application that is not running in the foreground to let 
    users know that it has information for them. When invoked, an alert dialog is displayed 
    containing a "Close" button to dismiss and a customizable "View" button to bring the application 
    into the foreground. Also, they can be configured to set an application icon badge, to show the 
    number of pending notifications, and to generate a sound.

extends: Titanium.Module
platforms: [iphone, ipad]
since: "1.5"

methods:
  - name: cancelAllLocalNotifications
    summary: Cancels all scheduled local notifications.
    
  - name: cancelLocalNotification
    summary: Cancels a local notification.
    parameters:
      - name: id
        summary: ID of the local notification to cancel.
        type: Number

  - name: registerBackgroundService
    summary: Registers a service to run when the application is placed in the background.
    returns:
        type: Titanium.App.iOS.BackgroundService
    parameters:
      - name: params
        summary: |
            Parameters used to create the service. Must include a `url` property, to specify the 
            local JavaScript file to execute when the application is placed in the background.
        type: Dictionary
        
  - name: scheduleLocalNotification
    summary: Schedule a local notification.
    returns:
        type: Titanium.App.iOS.LocalNotification
    parameters:
      - name: params
        summary: Parameters used to create a notification.
        type: Dictionary<NotificationParams>

  - name: setMinimumBackgroundFetchInterval
    summary: Specifies the minimum amount of time that must elapse between background fetch operations.
    description: |
        This property has no effect for apps that do not have the UIBackgroundModes key with 
        the fetch value in its Info.plist file. The default fetch interval for apps is 
        <replace>. Therefore, you must call this method and set a fetch interval before your 
        app is given background execution time.
    parameters:
      - name: fetchInterval
        summary: |
            The minimum number of seconds that must elapse before another background fetch can be initiated. 
            This value is advisory only and does not indicate the exact amount of time expected between 
            fetch operations.
        type: Number
    since: "3.2.0"

  - name: endBackgroundHandler
    summary: Marks the end of the app execution when a download operation is complete. 
    description: |
        When calling this method, pass in the handerID value that inititated the background state. 
        You must call this handler and should do so as soon as possible. 
    parameters:
      - name: handerID
        summary: |
            Unique string identifer for the event (backgroundfetch, silentpush or backgroundtransfer) 
            that initiated the background opertation mode.
        type: String
    since: "3.2.0"

properties:
  - name: EVENT_ACCESSIBILITY_LAYOUT_CHANGED
    summary: Convenience constant for system event "accessibilitylayoutchanged".
    type: String
    permission: read-only
    since: "3.0.0"

  - name: EVENT_ACCESSIBILITY_SCREEN_CHANGED
    summary: Convenience constant for system event "accessibilityscreenchanged".
    type: String
    permission: read-only
    since: "3.0.0"
    
  - name: BACKGROUNDFETCHINTERVAL_MIN
    summary: |
        Use with (endBackgroundHandler)[Titanium.App.iOS.endBackgroundHandler] method. 
        Specifies the smallest fetch interval supported by the system.
    type: Number
    permission: read-only
    since: "3.2.0"

  - name: BACKGROUNDFETCHINTERVAL_NEVER
    summary: |
        Use with (endBackgroundHandler)[Titanium.App.iOS.endBackgroundHandler] method. 
        Used to specify a fetch interval large enough to prevent fetch operations from occurring..
    type: Number
    permission: read-only
    since: "3.2.0"

events:
  - name: notification
    summary: Fired when a local notification is received by the application.
    properties:
      - name: alertAction
        summary: |
            Alert button text ('View', by default) or slider text ('slide to unlock...', by default).
        type: String

      - name: alertBody
        summary: Alert message.
        type: String
        
      - name: alertLaunchImage
        summary: Image displayed instead of `Default.png` when launching the application.
        type: String

      - name: badge
        summary: Application badge value.
        type: Number

      - name: date
        summary: Date and time when the notification was configured to fire.
        type: Date

      - name: sound
        summary: Path to the sound file configured to play when the notification was fired.
        type: String

      - name: timezone
        summary: Timezone of the date when the notification was configured to fire.
        type: String
        
      - name: userInfo
        summary: Custom data object.
        type: Dictionary

  - name: downloadprogress
    summary: Fired periodically to informs the app about the download's progress.
    description: |
        This event only needs to be used if your app is using the urlSession module to download data.
    properties:
      - name: taskIdentifier
        summary: The urlSession download task's identifer.
        type: Number

      - name: bytesWritten
        summary: The number of bytes transferred since the last time this event was fired.
        type: Number

      - name: totalBytesWritten
        summary: The total number of bytes transferred so far.
        type: Number

      - name: totalBytesExpectedToWrite
        summary: |
            The expected length of the file, as provided by the Content-Length header. If this 
            header was not provided, the value is zero.
        type: Number
    since: "3.2.0"

  - name: downloadcompleted
    summary: Fired to indicate that a download task has finished downloading. 
    description: |
        This event only needs to be used if your app is using the urlSession module to download data.
    properties:
      - name: taskIdentifier
        summary: The urlSession download task's identifer.
        type: Number

      - name: data
        summary: The downloaded data as a Titanium.Blob object.
        type: Titanium.Blob
    since: "3.2.0"

  - name: sessioncompleted
    summary: Fired to indicate that a session task finished transferring data.
    description: |
        This event only needs to be used if your app is using the urlSession module to download data.
        
        Server errors are not reported through the error parameter. The only errors event sends 
        through the error parameter are client-side errors, such as being unable to resolve 
        the hostname or connect to the host.
    properties:
      - name: taskIdentifier
        summary: The urlSession download task's identifer.
        type: Number

      - name: success
        summary:  Indicates if the operation succeeded. Returns true if download succeeded, false otherwise.
        type: Boolean

      - name: errorCode
        summary: The error code of the error, if any (potentially system-dependent).
        type: Number

      - name: message
        summary: A string containing the localized description of the error. 
        type: String
    since: "3.2.0"
    
  - name: sessioneventscompleted
    summary: Fired to indicate that all messages enqueued for a session have been delivered.
    description: |
        This event only needs to be used if your app is using the urlSession module to download data.
        
        In iOS, when a background transfer completes and if your app is no longer running, your app 
        is automatically relaunched in the background, and the app fires ['backgroundTransfer' event](Titanium.App.backgroundTransfer). 
        This event should have contained the identifier of the session that caused your app to be launched. 
        Your app should then store that handlerID before creating a background session configuration object 
        with the same identifier, and creating a url session object with that configuration. 
        The newly created session is automatically reassociated with ongoing background activity.
        
        When your app later receives a 'sessioneventscompleted' event, this indicates that 
        all messages previously enqueued for this session have been delivered, and that it 
        is now safe to invoke [endBackgroundHandler](Titanium.App.iOS.endBackgroundHandler) 
        method with the handlerID  or to begin any internal updates that may result in invoking 
        this method.
    since: "3.2.0"
---
name: NotificationParams
summary: |
    Dictionary object of parameters used to create a notification using 
    <Titanium.App.iOS.scheduleLocalNotification>.
since: "1.7"
platforms: [iphone, ipad]

properties:
  - name: alertAction
    summary: |
        Alert button text ('View', by default) or slider text ('slide to unlock...', by default) 
        to display.
    type: String
    optional: true
    
  - name: alertBody
    summary: Alert message to display.
    type: String
    optional: true
    
  - name: alertLaunchImage
    summary: Image to display instead of `Default.png` when launching the application.
    type: String
    optional: true
    
  - name: badge
    summary: Application badge value.
    type: Number
    optional: true

  - name: date
    summary: Date and time for the notification to occur.
    type: Date
    
  - name: repeat
    summary: Interval to repeat the notification. One of `weekly`, `daily`, `yearly,` `monthly`.
    type: String
    optional: true
    
  - name: sound
    summary: |
        Path to the sound file to play when notification occurs, relative to the `Resources` folder.
    type: String
    optional: true
    
  - name: timezone
    summary: |
        Timezone of the date configured for the notification. If not set, the system timezone is used.
    type: String
    optional: true
    
  - name: userInfo
    summary: Data to pass to the application with the notification event.
    type: Dictionary
    optional: true  
